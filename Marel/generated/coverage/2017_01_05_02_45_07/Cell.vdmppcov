class Cell
instance variables
	public id: nat;
	public hasPiece : bool := false;
	public piece : [Piece] := nil;
	public neighbours : set of nat1 := {};	-- conj com as celula adjacentes para onde e’ possivel mover a peca a partir desta celula
	public cellMills : seq of nat1 := [];
	
operations
	
	public Cell : nat ==> Cell Cell(i) == ( 
		id := i;
		return self 
	);

	--Gets Sets
	public getId: () ==> nat getId() == ( return id; );
	public setHasPiece: (bool) ==> () setHasPiece(value) == ( hasPiece := value; );
	public setPiece: (Piece) ==> () setPiece(value) == ( piece := value; );
	public setMills : seq of nat1 ==> () setMills(adjs) == ( cellMills := adjs;);
	
end Cell